name: cdk-ci

on:
  pull_request:
    branches:
      - main
    paths:
      - 'infra/**'
      - 'cdk/**'
      - 'cdk.json'
      - 'cdk/cdk.json'
      - 'package*.json'
      - 'requirements*.txt'
      - '.github/workflows/cdk-ci.yml'
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME || 'releasecopilot-ai' }}
  CDK_APP_PATH: cdk

jobs:
  cdk-diff:
    name: CDK diff
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            cdk/requirements.txt
            requirements.txt

      - name: Install CDK dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r cdk/requirements.txt

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk@2

      - name: Package Lambda artifacts
        run: |
          if [ -x scripts/package_lambda.sh ]; then
            scripts/package_lambda.sh
          else
            echo "Lambda packaging script not found" >&2
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.OIDC_ROLE_ARN || secrets.OIDC_ROLE_ARN }}
          role-session-name: cdk-ci
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK synth
        run: |
          cd "$CDK_APP_PATH"
          cdk synth "${PROJECT_NAME}-core" "${PROJECT_NAME}-lambda"
          if [ ! -d cdk.out ] || [ -z "$(ls -A cdk.out)" ]; then
            echo "cdk.out is empty" >&2
            exit 1
          fi

      - name: CDK diff
        run: |
          cd "$CDK_APP_PATH"
          cdk diff "${PROJECT_NAME}-core" "${PROJECT_NAME}-lambda"

      - name: Upload synthesized app
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: ${{ env.CDK_APP_PATH }}/cdk.out

  cdk-deploy:
    name: CDK deploy
    runs-on: ubuntu-latest
    needs: cdk-diff
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            cdk/requirements.txt
            requirements.txt

      - name: Install CDK dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r cdk/requirements.txt

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk@2

      - name: Package Lambda artifacts
        run: |
          if [ -x scripts/package_lambda.sh ]; then
            scripts/package_lambda.sh
          else
            echo "Lambda packaging script not found" >&2
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.OIDC_ROLE_ARN || secrets.OIDC_ROLE_ARN }}
          role-session-name: cdk-ci-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK deploy
        env:
          CDK_NEW_BOOTSTRAP: 1
        run: |
          cd "$CDK_APP_PATH"
          cdk deploy --require-approval never "${PROJECT_NAME}-core" "${PROJECT_NAME}-lambda"
