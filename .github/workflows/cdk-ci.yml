name: CDK CI

on:
  push:
    branches: [ "main", "feature/**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  cdk-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      id-token: write   # required for OIDC
    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f infra/cdk/requirements.txt ]; then pip install -r infra/cdk/requirements.txt; fi
          pip install pytest ruff

      - name: Lint
        run: ruff check . || true

      - name: Unit tests
        run: pytest -q

      - name: Install CDK
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm i -g aws-cdk@2

      - name: CDK synth
        run: |
          cd infra/cdk
          cdk synth

      # ---------- NEW: derive flags from secrets into env, but don't use secrets in `if:` ----------
      - name: Compute OIDC availability flags
        env:
          ROLE: ${{ secrets.AWS_OIDC_ROLE_ARN }}   # may be empty / unavailable on forks
        run: |
          if [ -n "$ROLE" ]; then
            echo "AWS_OIDC_ROLE_ARN=$ROLE" >> "$GITHUB_ENV"
            echo "OIDC_PRESENT=true" >> "$GITHUB_ENV"
          else
            echo "OIDC_PRESENT=false" >> "$GITHUB_ENV"
          fi

      # Use only env-based conditions from here on
      - name: Configure AWS creds (OIDC)
        if: ${{ env.OIDC_PRESENT == 'true' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Note when no AWS role is set
        if: ${{ env.OIDC_PRESENT != 'true' }}
        run: echo "No AWS_OIDC_ROLE_ARN secret set or unavailable on this event; continuing without AWS auth."
