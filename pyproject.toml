[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "releasecopilot-ai"
version = "0.0.0"
description = "Release Copilot automation tooling"
readme = "README.md"
license = "MIT"
authors = ["Release Copilot Team"]
packages = [
    { include = "releasecopilot", from = "src" },
    { include = "cli", from = "src" },
    { include = "export", from = "src" },
    { include = "matcher", from = "src" },
    { include = "ops", from = "src" },
    { include = "tracking", from = "src" },
    { include = "clients" },
    { include = "config" },
    { include = "exporters" },
    { include = "processors" },
    { include = "services" },
    { include = "ui" },
    { include = "tools" },
    { include = "scripts" },
]

[tool.poetry.dependencies]
python = "3.11.7"
boto3 = "^1.34.0"
click = "^8.1.7"
requests = "^2.31.0"
pandas = "2.2.2"
numpy = "1.26.4"
openpyxl = "^3.1.0"
PyYAML = "^6.0.0"
Jinja2 = "^3.1.0"
python-slugify = "^8.0.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
aws-cdk-lib = "2.154.1"
constructs = "10.3.0"
cdk-nag = "^2.28.0"
ruff = "0.6.9"
pytest = "8.3.3"
pytest-cov = "5.0.0"
jsonschema = "^4.23.0"
mypy = "1.11.2"
pre-commit = "3.8.0"
types-PyYAML = "6.0.12.20240808"
types-requests = "2.32.0.20241016"
"ruamel.yaml" = "0.18.6"

[tool.poetry.group.docs.dependencies]
mkdocs = "1.6.1"
mkdocs-material = "9.5.39"
pymdown-extensions = "10.11.2"


[tool.poetry.scripts]
rc = "releasecopilot.cli.__main__:main"
rc-audit = "releasecopilot.entrypoints.audit:main"
rc-recover = "releasecopilot.entrypoints.recover:main"
rc-wave2 = "releasecopilot.entrypoints.wave2:main"

[tool.ruff]
line-length = 100
target-version = "py311"
src = ["src", "."]

[tool.ruff.lint]
select = ["E4", "F"]
extend-select = ["I"]
ignore = []
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = [
    "releasecopilot",
    "cli",
    "clients",
    "config",
    "export",
    "matcher",
    "ops",
    "processors",
    "services",
    "tracking",
    "ui",
]
combine-as-imports = true
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
strict = true
no_implicit_optional = true
warn_unreachable = true
ignore_missing_imports = true
mypy_path = ["src"]
explicit_package_bases = true
namespace_packages = true
warn_unused_configs = true
warn_redundant_casts = true
show_error_codes = true
files = ["src", "tests"]

[[tool.mypy.overrides]]
module = "rag_aws.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "services.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-q --cov=src --cov-report=xml --cov-report=json"
markers = [
    "integration: integration-level recovery tool tests",
    "network: tests that require live network access",
]
pythonpath = ["src", "."]
testpaths = ["tests"]
tmp_path_retention_count = 3
tmp_path_retention_policy = "failed"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
omit = [
    "infra/**",
    "scripts/**",
    "tools/**",
    "services/**/handler.py",  # if not exercised in unit tests
    "src/**/__main__.py",
]
fail_under = 70
