name: ci

on:
  push:
    branches:
      - main
      - 'feature/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  python-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Ruff (errors only)
        run: ruff check --select F,E9 .

      - name: Pytest
        run: pytest -q

  package:
    runs-on: ubuntu-latest
    needs: python-checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Package Lambda
        run: bash scripts/package_lambda.sh

      - name: Zip Lambda bundle
        run: |
          cd dist/lambda
          zip -r ../lambda_bundle.zip .

      - name: Upload Lambda artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: lambda_bundle.zip
          path: dist/lambda_bundle.zip

  cdk-synth:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt', 'cdk/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt -r cdk/requirements.txt

      - name: Package Lambda for synth
        run: bash scripts/package_lambda.sh

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install CDK CLI
        run: npm install -g aws-cdk@2

      - name: CDK synth
        working-directory: infra/cdk
        run: cdk synth
